version: '3.5'

networks:
  gateway:

services:
  internals-explorer-backend:
    depends_on:
      - database
    container_name: ckompiler-internals-explorer-backend
    restart: unless-stopped
    image: ghcr.io/slak44/ckompiler-backend:latest
    env_file: .env
    environment:
      spring.profiles.active: production
      VIRTUAL_PORT: 8080
      POSTGRES_HOST: database
    expose:
      - "8080"
    networks:
      - application
      - gateway

  gateway:
    container_name: ckompiler-gateway
    restart: unless-stopped
    image: nginxproxy/nginx-proxy:alpine
    ports:
      - "80:80"
      - "443:443"
    environment:
      ENABLE_IPV6: true
      TRUST_DOWNSTREAM_PROXY: false
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./volume/certs:/etc/nginx/certs
      - ./volume/vhost:/etc/nginx/vhost.d
      - ./volume/html:/usr/share/nginx/html
      - ./nginx-vhost.d:/etc/nginx/vhost.d:ro
    networks:
      - application
      - gateway

  acme-companion:
    container_name: ckompiler-acme-companion
    restart: unless-stopped
    image: nginxproxy/acme-companion:2.2.8
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./volume/certs:/etc/nginx/certs
      - ./volume/vhost:/etc/nginx/vhost.d
      - ./volume/html:/usr/share/nginx/html
      - ./volume/acme:/etc/acme.sh
    env_file: .env
    environment:
      NGINX_PROXY_CONTAINER: ckompiler-gateway

  prometheus:
    volumes:
      - ./monitoring/prometheus-production.yml:/etc/prometheus/prometheus.yml
